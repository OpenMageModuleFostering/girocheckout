<?php

/*
* Abstract.php.
*/

abstract class Girosolution_Giroconnect_Model_Payment_Abstract extends Mage_Payment_Model_Method_Abstract {

/**
* @see Mage_Payment_Model_Method_Abstract::authorize()
*
* @param Varien_Object $payment
* @param unknown_type $amount
* @return Mage_Payment_Model_Abstract
*/
public function authorize(Varien_Object $payment, $amount) {
    return $this;
} // End authorize

/**
* Loads an order by its id. If the order was found, the order is returned, otherwise FALSE.
* @param type $orderid the orderid to load
* @return Mage_Sales_Model_Order if the order was found or FALSE if the order was not found
*/
public function getExistingOrder($orderid = '') {
  $orderid = isset($orderid) ? $orderid : '';

  $order = Mage::getModel('sales/order');
  $order->loadByIncrementId($orderid);

  // if no order found
  if (!$order->getId())
    return FALSE;
  else
    return $order;
} // End getExistingOrder


public function modifyOrderAfterPayment($paymentSuccessful = FALSE,
    $orderid = '',
    $updateOrderState = FALSE,
    $orderStateComment = '',
    $sendEmail = FALSE,
    $createInvoice = FALSE,
    $invoiceComment = '',
    $gcRef = null,
    $gcTransInfo = null,
    $orderStateFinished = Mage_Sales_Model_Order::STATE_PROCESSING) {

  $paymentSuccessful = isset($paymentSuccessful) ? (is_bool($paymentSuccessful) ? $paymentSuccessful : FALSE) : FALSE;
  $orderid = isset($orderid) ? $orderid : '';
  $updateOrderState = isset($updateOrderState) ? (is_bool($updateOrderState) ? $updateOrderState : FALSE) : FALSE;
  $orderStateComment = isset($orderStateComment) ? $orderStateComment : '';

  if( $orderStateComment == '' ) {
    if( $paymentSuccessful == TRUE )
      $orderStateComment = 'Payment was successful';
    else
      $orderStateComment = 'Payment failed';
  }

  $sendEmail = isset($sendEmail) ? (is_bool($sendEmail) ? $sendEmail : FALSE) : FALSE;
  $createInvoice = isset($createInvoice) ? (is_bool($createInvoice) ? $createInvoice : FALSE) : FALSE;
  $invoiceComment = isset($invoiceComment) ? $invoiceComment : '';
  if( $invoiceComment == '' ) {
    $invoiceComment = 'Automatically generated by payment confirmation';
  }


  $order = $this->getExistingOrder($orderid);

  // If order was not found, return FALSE
  if( $order === FALSE ) {
    return FALSE;
  }
  
  //If order was already updated, do not update again.
  if( $order->getState() != Mage_Sales_Model_Order::STATE_PENDING_PAYMENT ) {
    $updateOrderState = FALSE;
  }
  else {
    // update transaction
    $payment = $order->getPayment();
    $payment->setTransactionId($orderid);
    $transaction = $payment->addTransaction('order', null, false, false);
    $transaction->setParentTxnId($orderid);
    $transaction->setIsClosed(1);
    $transaction->setAdditionalInformation("arrInfo", serialize($gcTransInfo));
    $transaction->save();
    $order->save();
  }

  if( $paymentSuccessful == FALSE ) {
    // If no update was required, return TRUE, because the order was found
    if($updateOrderState == FALSE) {
      return TRUE;
    }

    $order->cancel();
    $order->addStatusToHistory($order->getStatus(), $orderStateComment);
    $order->save();
    return TRUE;
  } // end failed payment


  // SUCCESSFUL PAYMENT
  // Set customers shopping cart inactive
  Mage::getSingleton('checkout/session')->getQuote()->setIsActive(false)->save();
  // If no update was required, return TRUE, because the order was found
  if($updateOrderState == FALSE) {
    return TRUE;
  }

  if( empty($orderStateFinished) ) {
    $orderStateFinished = true;
  }

  /* Modify payment
    @param string $state
    @param string|bool $status
    @param string $comment
    @param bool $isCustomerNotified  */
  $order->setState(Mage_Sales_Model_Order::STATE_PROCESSING, $orderStateFinished, $orderStateComment);

  // Send email
  if( $sendEmail == TRUE ) {
    $order->sendNewOrderEmail();
    $order->setEmailSent(true);
  }

  if( $createInvoice == TRUE ) {
    if( $order->canInvoice() ) {
      $invoice = $order->prepareInvoice()->addComment($invoiceComment)->register()->pay();
      Mage::getModel('core/resource_transaction')->addObject($invoice)->addObject($invoice->getOrder())->save();
      $invoice->sendEmail(true, '');
      $order->setState(Mage_Sales_Model_Order::STATE_PROCESSING, $orderStateFinished, $invoiceComment);
    }
  }

  $order->save();

  return TRUE;
} // End modifyOrderAfterPayment

} // *** End class Girosolution_Giroconnect_Model_Payment_Abstract ***